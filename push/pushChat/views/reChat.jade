extends layout

block content
  h1 Push Chat Demo

  input(type="text" id="publicInput")

  input(type="button" onclick="sendPublicMessage()" value="sendPublicMessage")
  input(type="button" onclick="bindPublicChannelEvent()" value="bindPublicChannelEvent")
  input(type="button" onclick="unbindPublicChannelEvent()" value="unbindPublicChannelEvent")
  input(type="button" onclick="unScribeChannel('publicChannel')" value="unScribePublicChannel")

  p Public Messages
    div(id="publicMessages")

  input(type="text" id="privateInput")

  input(type="button" onclick="sendPrivateMessage()" value="sendPrivateMessage")
  input(type="button" onclick="bindPrivateChannelEvent()" value="bindPrivateChannelEvent")
  input(type="button" onclick="unbindPrivateChannelEvent()" value="unbindPrivateChannelEvent")
  input(type="button" onclick="unScribeChannel('privateChannel')" value="unScribePrivateChannel")

  p Private Messages
    div(id="privateMessages")

  script(type='text/javascript').
    //- TODO This appKey should get from server, and format like hash string
    //- var appKey = 'TestApp';
    var appKey = 'ba55d7d9472260547a867e00';
    var engine = new RealtimeEngine(appKey);

    //- subscribe self channel
    var randomId = Math.random() * 10000;
    var publicChannel = engine.subscribe('publicChannel');
    var privateChannel = engine.subscribe('privateChannel');

    //- privateChannel.bind('myEvent', function(data){
    //-   console.log(data, 'get myEvent data in privateChannel');
    //- });

    //- privateChannel.trigger('myEvent', 'ahha');

    //- publicChannel.bind('myEvent', function(data){
    //-   console.log(data, 'get myEvent data in publicChannel');
    //- });

    //- publicChannel.trigger('myEvent', 'ahha');

    function sendPublicMessage() {
      var inputvalue = $('#publicInput').val();

      publicChannel.trigger('publicMessage',{
        id: randomId,
        message: inputvalue
      });
      renderMessage('self', inputvalue, 'publicMessages');
    }

    function sendPrivateMessage() {
      var inputvalue = $('#privateInput').val();

      privateChannel.trigger('privateMessage',{
        id: randomId,
        message: inputvalue
      });
      renderMessage('self', inputvalue, 'privateMessages');
    }

    function unScribeChannel(channel) {
      engine.unSubscribe(channel);
    }

    function bindPrivateChannelEvent () {
      privateChannel.bind('privateMessage', function(data){
        console.log('get privateChannel message', data);
        renderMessage(data.id, data.message, 'privateMessages');
      });
    }

    function bindPublicChannelEvent () {
      publicChannel.bind('publicMessage', function(data){
        console.log('get publicChannel message', data);
        renderMessage(data.id, data.message, 'publicMessages');
      });
    }

    function unbindPrivateChannelEvent () {
      privateChannel.unbind('privateMessage');
    }

    function unbindPublicChannelEvent () {
      publicChannel.unbind('publicMessage');
    }

    function renderMessage(sender, message, messageDivID) {
      var $senderP= $("<p>"+sender+"</p>");
      var $messageP= $("<p>"+message+"</p>");
      var $blankP= $("<p>--------------------</p>");
      $('#'+messageDivID).append($senderP);
      $('#'+messageDivID).append($messageP);
      $('#'+messageDivID).append($blankP);
    }
