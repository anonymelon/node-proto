(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){

},{}],2:[function(require,module,exports){
exports.endianness = function () { return 'LE' };

exports.hostname = function () {
    if (typeof location !== 'undefined') {
        return location.hostname
    }
    else return '';
};

exports.loadavg = function () { return [] };

exports.uptime = function () { return 0 };

exports.freemem = function () {
    return Number.MAX_VALUE;
};

exports.totalmem = function () {
    return Number.MAX_VALUE;
};

exports.cpus = function () { return [] };

exports.type = function () { return 'Browser' };

exports.release = function () {
    if (typeof navigator !== 'undefined') {
        return navigator.appVersion;
    }
    return '';
};

exports.networkInterfaces
= exports.getNetworkInterfaces
= function () { return {} };

exports.arch = function () { return 'javascript' };

exports.platform = function () { return 'browser' };

exports.tmpdir = exports.tmpDir = function () {
    return '/tmp';
};

exports.EOL = '\n';

},{}],3:[function(require,module,exports){
// shim for using process in browser

var process = module.exports = {};

process.nextTick = (function () {
    var canSetImmediate = typeof window !== 'undefined'
    && window.setImmediate;
    var canMutationObserver = typeof window !== 'undefined'
    && window.MutationObserver;
    var canPost = typeof window !== 'undefined'
    && window.postMessage && window.addEventListener
    ;

    if (canSetImmediate) {
        return function (f) { return window.setImmediate(f) };
    }

    var queue = [];

    if (canMutationObserver) {
        var hiddenDiv = document.createElement("div");
        var observer = new MutationObserver(function () {
            var queueList = queue.slice();
            queue.length = 0;
            queueList.forEach(function (fn) {
                fn();
            });
        });

        observer.observe(hiddenDiv, { attributes: true });

        return function nextTick(fn) {
            if (!queue.length) {
                hiddenDiv.setAttribute('yes', 'no');
            }
            queue.push(fn);
        };
    }

    if (canPost) {
        window.addEventListener('message', function (ev) {
            var source = ev.source;
            if ((source === window || source === null) && ev.data === 'process-tick') {
                ev.stopPropagation();
                if (queue.length > 0) {
                    var fn = queue.shift();
                    fn();
                }
            }
        }, true);

        return function nextTick(fn) {
            queue.push(fn);
            window.postMessage('process-tick', '*');
        };
    }

    return function nextTick(fn) {
        setTimeout(fn, 0);
    };
})();

process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

// TODO(shtylman)
process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};

},{}],4:[function(require,module,exports){
(function (process){
// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var Env, excludeModule, fs, os, sio;

  Env = (process.ENV = 'Browser') ? require('./browser.coffee') : require('./node.coffee');

  fs = require('fs');

  os = require('os');

  console.log(os.getCPUNums());

  excludeModule = (process.ENV = 'Browser') ? require('./excludeModule.coffee') : void 0;

  sio = require('socket.io');

  excludeModule.exm.excludeMethod();

  Env.getInfo();

}).call(this);

}).call(this,require('_process'))
},{"./browser.coffee":5,"./excludeModule.coffee":6,"./node.coffee":7,"_process":3,"fs":1,"os":2,"socket.io":1}],5:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var Browser;

  Browser = (function() {
    function Browser() {}

    Browser.getInfo = function() {
      return console.log('Browser export');
    };

    return Browser;

  })();

  module.exports = Browser;

}).call(this);

},{}],6:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  module.exports.exm = {
    excludeMethod: function() {
      return console.log('excludeMethod');
    }
  };

}).call(this);

},{}],7:[function(require,module,exports){
// Generated by CoffeeScript 1.8.0
(function() {
  'use strict';
  var Node;

  Node = (function() {
    function Node() {}

    Node.getInfo = function() {
      return console.log('Node export');
    };

    return Node;

  })();

  module.exports = Node;

}).call(this);

},{}]},{},[4]);
